# Schema

schema {
  query: Query
}

# Query

type Query {
  i: Person!
  me: Person!
  you: Person2!
  youOrNull: Person2
  comments: [Comment!]!
}

type Person {
  name: String!
  age: Int
  email: String
  dog: Dog
  bestFriend: Person2
  friends: [Person2]
  intel: Intel
  intel10: Intel10
}

type Person2 {
  name: String!
  age: Int
  email: String
}

type Dog {
  name: String
  color: String!
}

type Intel implements Intel10 {
  field1: Int!
  field2: String!
  field3: Float!
  field4: [Int!]!
  field5: [String!]!
  field6: [Float!]!
  field7: Int!
  field8: String!
  field9: Float!
  field10: [Int!]!
  field11: [String!]!
  field12: [Float!]!
}

type OtherIntel implements Intel10 {
  field1: Int!
  field2: String!
  field3: Float!
  field4: [Int!]!
  field5: [String!]!
  field6: [Float!]!
  field7: Int!
  field8: String!
  field9: Float!
  field10: [Int!]!
  field11: [String!]!
}

interface Intel10 {
  field1: Int!
  field2: String!
  field3: Float!
  field4: [Int!]!
  field5: [String!]!
  field6: [Float!]!
  field7: Int!
  field8: String!
  field9: Float!
  field10: [Int!]!
}

type Comment {
  message: String!
  responses: [Comment!]!
}
